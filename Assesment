// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract SuperToken is ERC20 {
    address public owner;

    constructor() ERC20("Superman", "SPT") {
        owner = msg.sender;
        _mint(msg.sender, 500000 * 10 ** uint(decimals()));
    }

    function mint(address to, uint256 amount) external {
        require(msg.sender == owner, "Only owner can mint");
        _mint(to, amount);
    }

    function burn(uint256 amount) external {
        _burn(msg.sender, amount);
    }

    function transfer(address recipient, uint256 amount) public override returns (bool) {
        require(recipient != address(0), "Cannot transfer to the zero address"); // Custom logic
        return super.transfer(recipient, amount); // Call the original transfer function
    }
}
